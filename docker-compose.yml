version: '3.8'

services:
    web:
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        container_name: ${APP_NAME}_web
        volumes:
            - './docker/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf'
        ports:
            - 80:80
        networks:
            - dockerize-laravel
        depends_on:
            - mysql
            - app
            - node
            - redis

    app:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: ${APP_NAME}_app
        volumes:
            - './:/var/www/html'
        networks:
            - dockerize-laravel
        depends_on:
            - mysql
            - node
            - redis

    mysql:
        image: mariadb:10.11.4
        container_name: ${APP_NAME}_db
        restart: unless-stopped
        ports:
            - ${DB_PORT:-3306}:3306
        environment:
            - MARIADB_USER=${DB_USERNAME}
            - MARIADB_PASSWORD=${DB_PASSWORD}
            - MARIADB_DATABASE=${DB_DATABASE}
            - MARIADB_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - 'mariadbdata:/var/lib/mysql'
        networks:
            - dockerize-laravel

    node:
        image: node:16-alpine # Todo set to global environment variables with extension fields, anchors
        container_name: ${APP_NAME}_node
        ports:
            - 5173:5173
        working_dir: /var/www/html
        volumes:
            - './:/var/www/html'
        command: ["sh", "-c", "npm install && npm run dev"]
        networks:
            - dockerize-laravel
        restart: unless-stopped

    redis:
        image: redis:6.0.20-alpine
        container_name: ${APP_NAME}_redis
        ports:
            - ${REDIS_PORT:-6379}:6379
        restart: unless-stopped
        volumes:
            - 'redisdata:/data'
        networks:
            - dockerize-laravel

volumes:
    mariadbdata:
    redisdata:

networks:
    dockerize-laravel:
