name: CI
on:
    workflow_dispatch: # Ability to manually run this workflow from ui.
    push:
        branches:
            - "*"

env:
    APP_NAME: dockerize-laravel
    REGISTRY: docker.io
    IMAGE_NAME: dockerize-laravel

jobs:
    pipelines:
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Back up .env.prod
              run: cp .env.prod .env.prod.bak

            - name: Set env ci file
              run: mv -f .env.ci .env.prod
              # We set .env.ci as prod so that, php docker build automatically replaces the current .env.prod to .env while bringing the production docker file up.

            - name: Run docker containers
              run: docker compose -f docker-compose.prod.yml --env-file=.env.prod up -d
              # Todo cache this.

            - name: Composer install
              run: docker exec -i ${{ env.APP_NAME }}_app composer install

            - name: Check coding standards
              run: docker exec -i ${{ env.APP_NAME }}_app ./vendor/bin/pint --test

            - name: Run all php tests
              run: docker exec -i ${{ env.APP_NAME }}_app php artisan test

            - name: Shut down containers
              run: docker compose down

            - name: Revert back env files
              run: mv -f .env.prod .env.ci && mv -f .env.prod.bak .env.prod

    publish_to_docker_hub:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master' # Here if branch is master only we publish to docker hub.
        needs: [pipelines]
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Login to docker hub
              uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Extract metadata (tabs, labels) for Docker
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push docker image
              uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            # - name: Build application docker image
            #   env:
            #       IMAGE_TAG: ${{ github.sha }}
            #   run: docker build -t ${{ DOCKERHUB_USERNAME }}/${{ APP_NAME }}:${{ IMAGE_TAG }} .

    deploy_to_production:
        if: github.ref == 'refs/heads/master' # Here if branch is master only.
        runs-on: ubuntu-latest
        needs: [pipelines, publish_to_docker_hub]
        environment: production
        concurrency: production # Only one production job runs at any point of time.
        steps:
            - name: Echo github context
              run: echo "$GITHUB_CONTEXT"
              env:
                  GITHUB_CONTEXT: ${{ toJson(github) }}

            - name: Deploy
              run: ls -la # Run actual script for deploy to do.
