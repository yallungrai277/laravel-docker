name: CI
on:
    workflow_dispatch: # Ability to manually run this workflow from ui.
    push:
        branches:
            - "*"

env:
    APP_NAME: dockerize-laravel

jobs:
    deploy_to_production_via_dockerhub_image:
        if: github.ref == 'refs/heads/master' # Here if branch is master only.
        runs-on: ubuntu-latest
        environment: production
        concurrency: production # Only one production job runs at any point of time.
        steps:
            - name: Install ssh keys
              run: |
                  install -m 600 -D /dev/null ~/.ssh/id_rsa
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                  ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
            - name: Checkout code to get files needed
              uses: actions/checkout@v2
            # Transfer only required files as the code has already been pushed and bundled up inside the docker hub image.
            - name: Transfer required files for docker setup
              run: |
                  scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r \
                  $GITHUB_WORKSPACE/docker \
                  $GITHUB_WORKSPACE/docker-compose.prod.yml \
                  $GITHUB_WORKSPACE/.env.prod \
                  ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.WORK_DIR }}
            # Login to server and deploy.
            - name: Deploy
              run: |
                  ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
                  "cd ${{ secrets.WORK_DIR }} && \
                  docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }} && \
                  docker compose -f docker-compose.prod.yml --env-file .env.prod pull && \
                  docker compose -f docker-compose.prod.yml --env-file .env.prod up -d && \
                  docker exec ${{ env.APP_NAME }}_app /bin/sh ./scripts/post-deploy.sh && \
                  exit"
            - name: Cleanup
              run: rm -rf ~/.ssh
